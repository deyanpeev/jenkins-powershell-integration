def executePowerShell(Map params) {
    env.GITREPO   = 'git@gitlab.example.com:root/powershell.git'
    env.GIT_CREDENTIALS = 'gitlab'

    pipeline {
        agent any

        parameters {
            string(name: "OLD_FILENAME", defaultValue: "JsonFiles/old.json", description: "Old File To Compare")
            string(name: "NEW_FILENAME", defaultValue: "JsonFiles/new.json", description: "New File To Compare")
            string(name: "GITBRANCH", defaultValue: "comparator", description: "git branch")
        }

        stages {
            stage("Download repository") {
                steps {
                    git branch: "${env.GITBRANCH}", url: "${env.GITREPO}", credentialsId: "${env.GIT_CREDENTIALS}"
                }
            }
            stage("Execute powershell") {
                steps {
                    powershell '. "$ENV:WORKSPACE\\scripts\\JSON_comparator.ps1" -OldFileName $($env:OLD_FILENAME) -NewFileName $($env:NEW_FILENAME)'
                }
            }
            stage("Upload repo") {
                steps {
                    withCredentials([sshUserPrivateKey(credentialsId: 'gitlab', keyFileVariable: 'KEY_FILE', passphraseVariable: 'PASS', usernameVariable: 'USER')]) {
                        sh """
                            git config --global user.email "admin@example.com"
                            git config --global user.name "${USER}"
                        
                            git pull origin ${env.GITBRANCH}
                            git add .
                            git commit -am "Git commit files"
                            
                            git push --set-upstream origin ${env.GITBRANCH}
                        """
                    }
                }
            }
        }
    }
}